const events = require('events')
const electron = require('electron')

class Window extends events.EventEmitter {
	constructor() {
		super()
		this.modules = {}
		global.modules = this.modules

		this.window = new electron.BrowserWindow({
			title: 'Tera Proxy Modules',
			frame: false,
			backgroundColor: '#14171A'
		})

		this.listener = (event, ...args) => {
			if (event.sender === this.window.webContents) {
				this.emit(...args[0])
			}
		}

		this.window.on('close', (e) => {
			e.preventDefault()
			this.window.hide()
		})

		this.window.loadURL(`file://${__dirname}/www/index.html`)
		this.window.openDevTools()

		this.destructor = () => {
			this.window.destroy()
		}
	}

	add(name, path) {
		if (this.modules[name.toLowerCase()]) throw new Error('Window.add: window already exist:', name)

		this.modules[name.toLowerCase()] = { name, path }
		console.log(`[GUI] added new ui tab for module "${name}", path: "${path}"`)

		electron.ipcMain.on(name.toLowerCase(), this.listener)

		this.window.webContents.send('add', name, path)
	}

	remove(name) {
		if (!this.modules[name.toLowerCase()]) throw new Error('Window.remove: window dont exist:', name)

		delete this.modules[name.toLowerCase()]
		console.log(`[GUI] removed ui tab for module "${name}"`)

		electron.ipcMain.removeListener(name.toLowerCase(), this.listener)
		this.window.webContents.send('remove', name)
	}

	show(name) {
		if (!this.modules[name.toLowerCase()]) throw new Error('Window.show: window dont exist:', name)

		if (!this.window.isVisible()) this.window.show()
		this.window.webContents.send('show', name)
	}

	send(name, ...args) {
		if (!this.modules[name.toLowerCase()]) throw new Error('Window.send: window dont exist:', name)

		this.window.webContents.send('send', name, ...args)
	}
}

let map = new WeakMap()

module.exports = function Require(dispatch) {
	if (map.has(dispatch.base)) return map.get(dispatch.base)

	let window = new Window(dispatch)
	map.set(dispatch.base, window)
	return window
}
